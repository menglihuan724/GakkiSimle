<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.terry</groupId>
	<artifactId>GakkiSimle</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>pom</packaging>

	<name>GakkiSimle</name>
	<description>a spring_cloud demo for cgq project</description>

	<modules>
		<module>GakkiSimle_core</module>
		<module>GakkiSimle_config</module>
		<module>GakkiSimle_register</module>
		<module>GakkiSimle_wechat</module>
	</modules>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>1.5.8.RELEASE</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.8</java.version>
		<spring-cloud.version>Dalston.SR4</spring-cloud.version>
		<spring-cloud-starter-zuul.version>1.3.5.RELEASE</spring-cloud-starter-zuul.version>
		<commons-lang3.version>3.5</commons-lang3.version>
		<guava.version>19.0</guava.version>
		<javax.servlet.version>3.1.0</javax.servlet.version>
		<joda-time.version>2.9.8</joda-time.version>
		<druid.version>1.0.28</druid.version>
		<fastjson.version>1.2.31</fastjson.version>
		<mybatis-plus.version>2.1.8</mybatis-plus.version>
		<mybatis-spring-boot-starter.version>1.2.0</mybatis-spring-boot-starter.version>
		<pagehelper.version>4.1.6</pagehelper.version>
		<pagehelper-spring-boot-starter.version>1.2.3</pagehelper-spring-boot-starter.version>
		<mapper-spring-boot-starter.version>1.2.3</mapper-spring-boot-starter.version>
		<kafka-clients.version>0.10.0.1</kafka-clients.version>
		<spring-kafka.version>1.1.3.RELEASE</spring-kafka.version>
		<mysql.version>5.1.41</mysql.version>
		<springfox-swagger.version>2.6.1</springfox-swagger.version>

	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter</artifactId>
		</dependency>

		<!--<dependency>-->
			<!--<groupId>org.apache.logging.log4j</groupId>-->
			<!--<artifactId>log4j-api</artifactId>-->
		<!--</dependency>-->

		<!--<dependency>-->
			<!--<groupId>org.apache.logging.log4j</groupId>-->
			<!--<artifactId>log4j-core</artifactId>-->
		<!--</dependency>-->

		<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>fastjson</artifactId>
		</dependency>

		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>joda-time</groupId>
			<artifactId>joda-time</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
		</dependency>

	</dependencies>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${spring-cloud.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>

			<dependency>
				<groupId>com.alibaba</groupId>
				<artifactId>fastjson</artifactId>
				<version>${fastjson.version}</version>
			</dependency>

			<dependency>
				<groupId>com.alibaba</groupId>
				<artifactId>druid</artifactId>
				<version>${druid.version}</version>
			</dependency>
			<!-- mybatis plus-->

			<dependency>
				<groupId>com.baomidou</groupId>
				<artifactId>mybatis-plus</artifactId>
				<version>${mybatis-plus.version}</version>
			</dependency>


			<!-- 通用mapper -->
			<dependency>
				<groupId>tk.mybatis</groupId>
				<artifactId>mapper-spring-boot-starter</artifactId>
				<version>${mapper-spring-boot-starter.version}</version>
			</dependency>

			<!-- mybatis page plugin -->
			<dependency>
				<groupId>com.github.pagehelper</groupId>
				<artifactId>pagehelper</artifactId>
				<version>${pagehelper.version}</version>
			</dependency>

			<!-- springfox-swagger -->
			<dependency>
				<groupId>io.springfox</groupId>
				<artifactId>springfox-swagger2</artifactId>
				<version>${springfox-swagger.version}</version>
			</dependency>
			<dependency>
				<groupId>io.springfox</groupId>
				<artifactId>springfox-swagger-ui</artifactId>
				<version>${springfox-swagger.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.kafka</groupId>
				<artifactId>spring-kafka</artifactId>
				<version>${spring-kafka.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.kafka</groupId>
				<artifactId>kafka-clients</artifactId>
				<version>${kafka-clients.version}</version>
			</dependency>

			<dependency>
				<groupId>com.github.pagehelper</groupId>
				<artifactId>pagehelper-spring-boot-starter</artifactId>
				<version>${pagehelper-spring-boot-starter.version}</version>
			</dependency>
			<dependency>
				<groupId>org.mybatis.spring.boot</groupId>
				<artifactId>mybatis-spring-boot-starter</artifactId>
				<version>${mybatis-spring-boot-starter.version}</version>
			</dependency>
			<dependency>
				<groupId>joda-time</groupId>
				<artifactId>joda-time</artifactId>
				<version>${joda-time.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-lang3</artifactId>
				<version>${commons-lang3.version}</version>
			</dependency>

			<dependency>
				<groupId>javax.servlet</groupId>
				<artifactId>javax.servlet-api</artifactId>
				<scope>provided</scope>
				<version>${javax.servlet.version}</version>
			</dependency>

		</dependencies>
	</dependencyManagement>

	<build>
		<finalName>${project.artifactId}-${project.version}</finalName>
		<plugins>

			<!--用于编译Maven项目的Java源代码-->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
			</plugin>
			<!--surefire 插件用来在maven构建生命周期的test phase执行一个应用的单元测试。它会产生两种不同形式
            的测试结果报告：纯文本、XML格式,它可以运行任何testNG,Junit,pojo写的单元测试-->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<!--跳过测试-->
				<configuration>
					<skipTests>true</skipTests>
				</configuration>
			</plugin>
			<!--默认绑定在maven的生命周期install阶段-->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-install-plugin</artifactId>
			</plugin>
			<!--maven打成源码包-->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
			</plugin>
			<!--maven项目部署到Repository(Nexus)-->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-deploy-plugin</artifactId>
			</plugin>
			<!--springboot打jar包-->
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
		</plugins>

		<pluginManagement>
			<plugins>
				<!--用于编译Maven项目的Java源代码-->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<configuration>
						<source>${java.version}</source>
						<target>${java.version}</target>
						<encoding>${project.build.sourceEncoding}</encoding>
						<maxmem>1024m</maxmem>
						<compilerArgs>
							<arg>-Xlint:none</arg>
						</compilerArgs>
					</configuration>
				</plugin>
				<!--用于打包可执行jar包-->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-jar-plugin</artifactId>
					<version>2.5</version>
					<configuration>
						<archive>
							<addMavenDescriptor>false</addMavenDescriptor>
							<manifest>
								<addDefaultSpecificationEntries>true
								</addDefaultSpecificationEntries>
								<addDefaultImplementationEntries>true
								</addDefaultImplementationEntries>
							</manifest>
							<manifestEntries>
								<X-Compile-Source-JDK>${java.version}</X-Compile-Source-JDK>
								<X-Compile-Target-JDK>${java.version}</X-Compile-Target-JDK>
							</manifestEntries>
						</archive>
					</configuration>
				</plugin>
				<!--maven打成源码包-->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-source-plugin</artifactId>
					<configuration>
						<attach>true</attach>
					</configuration>
					<executions>
						<execution>
							<phase>package</phase>
							<goals>
								<goal>jar-no-fork</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<!--生成JavaDoc-->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-javadoc-plugin</artifactId>
					<configuration>
						<aggregate>true</aggregate>
					</configuration>
					<executions>
						<execution>
							<id>attach-javadocs</id>
							<goals>
								<goal>jar</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<!--生成可直接运行jar-->
				<plugin>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-maven-plugin</artifactId>
					<executions>
						<execution>
							<goals>
								<goal>repackage</goal>
							</goals>
							<configuration>
								<classifier>exec</classifier>
							</configuration>
						</execution>
					</executions>
				</plugin>
				<!--mybatis插件-->
				<plugin>
					<groupId>org.mybatis.generator</groupId>
					<artifactId>mybatis-generator-maven-plugin</artifactId>
					<version>1.3.5</version>
					<!--<dependencies>-->
						<!--<dependency>-->
							<!--<groupId>org.mybatis</groupId>-->
							<!--<artifactId>mybatis</artifactId>-->
							<!--&lt;!&ndash;<version>${mybatis.version}</version>&ndash;&gt;-->
						<!--</dependency>-->
						<!--<dependency>-->
							<!--<groupId>org.mybatis</groupId>-->
							<!--<artifactId>mybatis-spring</artifactId>-->
							<!--&lt;!&ndash;<version>${mybatis-spring.version}</version>&ndash;&gt;-->
						<!--</dependency>-->
						<!--<dependency>-->
							<!--<groupId>mysql</groupId>-->
							<!--<artifactId>mysql-connector-java</artifactId>-->
							<!--<version>${mysql.version}</version>-->
						<!--</dependency>-->
					<!--</dependencies>-->
					<configuration>
						<verbose>true</verbose>
						<overwrite>true</overwrite>
						<configurationFile>${basedir}/src/test/resources/mybatis-generator.xml
						</configurationFile>
					</configuration>
				</plugin>

				<plugin>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-maven-plugin-ext</artifactId>
					<version>1.5.2.RELEASE</version>
					<executions>
						<execution>
							<goals>
								<goal>repackage</goal>
							</goals>
						</execution>
					</executions>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-install-plugin</artifactId>
					<version>2.5.2</version>
				</plugin>
				<!--deploy插件用于把Maven自动构建生成的版本发布到中央代理仓库如Nexus服务器上，
                也能把第三方依赖库(如Jar包)或一个独立的Jar包直接发布到中央代理仓库供大家共享使用-->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-deploy-plugin</artifactId>
					<version>2.8.2</version>
				</plugin>
			</plugins>

		</pluginManagement>


	</build>


</project>
